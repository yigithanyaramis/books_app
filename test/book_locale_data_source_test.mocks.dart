// Mocks generated by Mockito 5.4.4 from annotations
// in books_app/test/book_locale_data_source_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:books_app/data/core/app_hive.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [AppHive].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppHive<T> extends _i1.Mock implements _i2.AppHive<T> {
  MockAppHive() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> init(String? boxName) => (super.noSuchMethod(
        Invocation.method(
          #init,
          [boxName],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> cacheData({
    required String? key,
    required T? value,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #cacheData,
          [],
          {
            #key: key,
            #value: value,
          },
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  T? getData({required String? key}) => (super.noSuchMethod(Invocation.method(
        #getData,
        [],
        {#key: key},
      )) as T?);

  @override
  _i3.Future<void> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
